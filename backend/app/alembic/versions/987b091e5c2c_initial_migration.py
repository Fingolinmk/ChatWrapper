"""Initial migration

Revision ID: 987b091e5c2c
Revises: 
Create Date: 2025-07-24 11:43:30.443415

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '987b091e5c2c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_api_keys_id'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_key'), table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_index(op.f('ix_models_id'), table_name='models')
    op.drop_index(op.f('ix_models_name'), table_name='models')
    op.drop_table('models')
    op.drop_index(op.f('ix_providers_id'), table_name='providers')
    op.drop_index(op.f('ix_providers_name'), table_name='providers')
    op.drop_table('providers')
    op.drop_index(op.f('ix_agents_id'), table_name='agents')
    op.drop_index(op.f('ix_agents_model'), table_name='agents')
    op.drop_index(op.f('ix_agents_name'), table_name='agents')
    op.drop_table('agents')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agents',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('model', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('instructions', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('tools', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('completion_args', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('provider_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.id'], name=op.f('agents_provider_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('agents_pkey'))
    )
    op.create_index(op.f('ix_agents_name'), 'agents', ['name'], unique=False)
    op.create_index(op.f('ix_agents_model'), 'agents', ['model'], unique=False)
    op.create_index(op.f('ix_agents_id'), 'agents', ['id'], unique=False)
    op.create_table('providers',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('providers_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('api_schema', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='providers_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_providers_name'), 'providers', ['name'], unique=True)
    op.create_index(op.f('ix_providers_id'), 'providers', ['id'], unique=False)
    op.create_table('models',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('provider_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.id'], name=op.f('models_provider_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('models_pkey'))
    )
    op.create_index(op.f('ix_models_name'), 'models', ['name'], unique=True)
    op.create_index(op.f('ix_models_id'), 'models', ['id'], unique=False)
    op.create_table('api_keys',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('provider_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('key', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.id'], name=op.f('api_keys_provider_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('api_keys_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('api_keys_pkey'))
    )
    op.create_index(op.f('ix_api_keys_key'), 'api_keys', ['key'], unique=False)
    op.create_index(op.f('ix_api_keys_id'), 'api_keys', ['id'], unique=False)
    # ### end Alembic commands ###
